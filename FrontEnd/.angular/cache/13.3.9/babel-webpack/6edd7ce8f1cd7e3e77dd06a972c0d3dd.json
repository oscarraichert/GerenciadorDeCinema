{"ast":null,"code":"import { catchError, map, throwError } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FilmeService = /*#__PURE__*/(() => {\n  class FilmeService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n    }\n\n    selecionarTodos() {\n      const resposta = this.http.get(this.apiUrl + 'filmes').pipe(map(this.processarDados), catchError(this.processarFalha));\n      return resposta;\n    }\n\n    inserir(filme) {\n      const resposta = this.http.post(this.apiUrl + 'filmes', filme).pipe(map(this.processarDados), catchError(this.processarFalha));\n      return resposta;\n    }\n\n    editar(filme) {\n      const resposta = this.http.put(this.apiUrl + 'filmes/' + filme.id, filme).pipe(map(this.processarDados), catchError(this.processarFalha));\n      return resposta;\n    }\n\n    excluir(id) {\n      const resposta = this.http.delete(this.apiUrl + 'filmes/' + id).pipe(map(this.processarDados), catchError(this.processarFalha));\n      return resposta;\n    }\n\n    selecionarFilmeCompletoPorId(id) {\n      const resposta = this.http.get(this.apiUrl + 'filmes/' + id).pipe(map(this.processarDados), catchError(this.processarFalha));\n      return resposta;\n    }\n\n    processarDados(resposta) {\n      if (resposta === null || resposta === void 0 ? void 0 : resposta.sucesso) {\n        return resposta.dados;\n      } else {\n        return resposta;\n      }\n    }\n\n    processarFalha(resposta) {\n      return throwError(() => new Error(resposta.error.erros[0]));\n    }\n\n  }\n\n  FilmeService.ɵfac = function FilmeService_Factory(t) {\n    return new (t || FilmeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FilmeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FilmeService,\n    factory: FilmeService.ɵfac\n  });\n  return FilmeService;\n})();","map":null,"metadata":{},"sourceType":"module"}